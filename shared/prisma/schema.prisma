generator client {
  provider = "prisma-client-js"
}

// Generates the JSON schema to be used in OpenAPI docs generator
generator jsonSchema {
  provider                 = "prisma-json-schema-generator"
  output                   = "../../apps/server/src/docs/"
  keepRelationFields       = false
  keepRelationScalarFields = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id       String   @id @default(uuid())
  email    String   @unique
  password String
  channel  Channel?
  image    String   @default("/assets/default_profile.png")

  subscriptions Subscription[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
}

model Channel {
  id          String  @id @default(uuid())
  title       String
  handle      String  @unique
  image       String  @default("/assets/default_profile.png")
  description String?

  account   Account @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId String  @unique
  videos    Video[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  comments    Comment[]
  subscribers Subscription[]

  @@index([title, handle, accountId])
}

model Video {
  id          String  @id @default(uuid())
  title       String
  description String?
  thumbnail   String  @default("/assets/default_thumbnail.png")
  preview     String?
  url         String

  processed         Boolean             @default(false)
  ProcessingDetails ProcessingDetails[]

  channel   Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)
  channelId String

  comments Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([channelId, title])
}

model ProcessingDetails {
  video   Video  @relation(fields: [videoId], references: [id], onDelete: Cascade)
  videoId String @id

  status_240p  TranscodingStatus @default(NOT_AVAILABLE)
  status_360p  TranscodingStatus @default(NOT_AVAILABLE)
  status_480p  TranscodingStatus @default(NOT_AVAILABLE)
  status_720p  TranscodingStatus @default(NOT_AVAILABLE)
  status_1080p TranscodingStatus @default(NOT_AVAILABLE)
}

enum TranscodingStatus {
  NOT_AVAILABLE
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
  FAILED
}

model Comment {
  id String @id @default(uuid())

  author   Channel @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId String

  video   Video  @relation(fields: [videoId], references: [id], onDelete: Cascade)
  videoId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Subscription {
  id String @id @default(uuid())

  subscriber   Account @relation(fields: [subscriberId], references: [id], onDelete: Cascade)
  subscriberId String

  channel   Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)
  channelId String
}
